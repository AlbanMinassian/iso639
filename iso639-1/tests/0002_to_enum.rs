extern crate iso639_1;
use iso639_1::{Iso639_1, get_enum, Iso639v1ErrorKind};

#[test]
fn to_enum_0001_notexist() {
    let result = get_enum("XXXX");
    assert!(result.is_err() == true);
    let error = result.err().unwrap();
    let message = error.inner.to_string();
    assert_eq!(message, "not found XXXX".to_string());
    let kind = error.kind();
    assert_eq!(kind, &Iso639v1ErrorKind::NotFoundIso639v1("XXXX".to_string()));
}

#[test]
fn to_enum_0002_2chars() {
        assert!(get_enum("aa").unwrap() == Iso639_1::Aa);
        assert!(get_enum("ab").unwrap() == Iso639_1::Ab);
        assert!(get_enum("ae").unwrap() == Iso639_1::Ae);
        assert!(get_enum("af").unwrap() == Iso639_1::Af);
        assert!(get_enum("ak").unwrap() == Iso639_1::Ak);
        assert!(get_enum("am").unwrap() == Iso639_1::Am);
        assert!(get_enum("an").unwrap() == Iso639_1::An);
        assert!(get_enum("ar").unwrap() == Iso639_1::Ar);
        assert!(get_enum("as").unwrap() == Iso639_1::As);
        assert!(get_enum("av").unwrap() == Iso639_1::Av);
        assert!(get_enum("ay").unwrap() == Iso639_1::Ay);
        assert!(get_enum("az").unwrap() == Iso639_1::Az);
        assert!(get_enum("ba").unwrap() == Iso639_1::Ba);
        assert!(get_enum("be").unwrap() == Iso639_1::Be);
        assert!(get_enum("bg").unwrap() == Iso639_1::Bg);
        assert!(get_enum("bh").unwrap() == Iso639_1::Bh);
        assert!(get_enum("bi").unwrap() == Iso639_1::Bi);
        assert!(get_enum("bm").unwrap() == Iso639_1::Bm);
        assert!(get_enum("bn").unwrap() == Iso639_1::Bn);
        assert!(get_enum("bo").unwrap() == Iso639_1::Bo);
        assert!(get_enum("br").unwrap() == Iso639_1::Br);
        assert!(get_enum("bs").unwrap() == Iso639_1::Bs);
        assert!(get_enum("ca").unwrap() == Iso639_1::Ca);
        assert!(get_enum("ce").unwrap() == Iso639_1::Ce);
        assert!(get_enum("ch").unwrap() == Iso639_1::Ch);
        assert!(get_enum("co").unwrap() == Iso639_1::Co);
        assert!(get_enum("cr").unwrap() == Iso639_1::Cr);
        assert!(get_enum("cs").unwrap() == Iso639_1::Cs);
        assert!(get_enum("cu").unwrap() == Iso639_1::Cu);
        assert!(get_enum("cv").unwrap() == Iso639_1::Cv);
        assert!(get_enum("cy").unwrap() == Iso639_1::Cy);
        assert!(get_enum("da").unwrap() == Iso639_1::Da);
        assert!(get_enum("de").unwrap() == Iso639_1::De);
        assert!(get_enum("dv").unwrap() == Iso639_1::Dv);
        assert!(get_enum("dz").unwrap() == Iso639_1::Dz);
        assert!(get_enum("ee").unwrap() == Iso639_1::Ee);
        assert!(get_enum("el").unwrap() == Iso639_1::El);
        assert!(get_enum("en").unwrap() == Iso639_1::En);
        assert!(get_enum("eo").unwrap() == Iso639_1::Eo);
        assert!(get_enum("es").unwrap() == Iso639_1::Es);
        assert!(get_enum("et").unwrap() == Iso639_1::Et);
        assert!(get_enum("eu").unwrap() == Iso639_1::Eu);
        assert!(get_enum("fa").unwrap() == Iso639_1::Fa);
        assert!(get_enum("ff").unwrap() == Iso639_1::Ff);
        assert!(get_enum("fi").unwrap() == Iso639_1::Fi);
        assert!(get_enum("fj").unwrap() == Iso639_1::Fj);
        assert!(get_enum("fo").unwrap() == Iso639_1::Fo);
        assert!(get_enum("fr").unwrap() == Iso639_1::Fr);
        assert!(get_enum("fy").unwrap() == Iso639_1::Fy);
        assert!(get_enum("ga").unwrap() == Iso639_1::Ga);
        assert!(get_enum("gd").unwrap() == Iso639_1::Gd);
        assert!(get_enum("gl").unwrap() == Iso639_1::Gl);
        assert!(get_enum("gn").unwrap() == Iso639_1::Gn);
        assert!(get_enum("gu").unwrap() == Iso639_1::Gu);
        assert!(get_enum("gv").unwrap() == Iso639_1::Gv);
        assert!(get_enum("ha").unwrap() == Iso639_1::Ha);
        assert!(get_enum("he").unwrap() == Iso639_1::He);
        assert!(get_enum("hi").unwrap() == Iso639_1::Hi);
        assert!(get_enum("ho").unwrap() == Iso639_1::Ho);
        assert!(get_enum("hr").unwrap() == Iso639_1::Hr);
        assert!(get_enum("ht").unwrap() == Iso639_1::Ht);
        assert!(get_enum("hu").unwrap() == Iso639_1::Hu);
        assert!(get_enum("hy").unwrap() == Iso639_1::Hy);
        assert!(get_enum("hz").unwrap() == Iso639_1::Hz);
        assert!(get_enum("ia").unwrap() == Iso639_1::Ia);
        assert!(get_enum("id").unwrap() == Iso639_1::Id);
        assert!(get_enum("ie").unwrap() == Iso639_1::Ie);
        assert!(get_enum("ig").unwrap() == Iso639_1::Ig);
        assert!(get_enum("ii").unwrap() == Iso639_1::Ii);
        assert!(get_enum("ik").unwrap() == Iso639_1::Ik);
        assert!(get_enum("io").unwrap() == Iso639_1::Io);
        assert!(get_enum("is").unwrap() == Iso639_1::Is);
        assert!(get_enum("it").unwrap() == Iso639_1::It);
        assert!(get_enum("iu").unwrap() == Iso639_1::Iu);
        assert!(get_enum("ja").unwrap() == Iso639_1::Ja);
        assert!(get_enum("jv").unwrap() == Iso639_1::Jv);
        assert!(get_enum("ka").unwrap() == Iso639_1::Ka);
        assert!(get_enum("kg").unwrap() == Iso639_1::Kg);
        assert!(get_enum("ki").unwrap() == Iso639_1::Ki);
        assert!(get_enum("kj").unwrap() == Iso639_1::Kj);
        assert!(get_enum("kk").unwrap() == Iso639_1::Kk);
        assert!(get_enum("kl").unwrap() == Iso639_1::Kl);
        assert!(get_enum("km").unwrap() == Iso639_1::Km);
        assert!(get_enum("kn").unwrap() == Iso639_1::Kn);
        assert!(get_enum("ko").unwrap() == Iso639_1::Ko);
        assert!(get_enum("kr").unwrap() == Iso639_1::Kr);
        assert!(get_enum("ks").unwrap() == Iso639_1::Ks);
        assert!(get_enum("ku").unwrap() == Iso639_1::Ku);
        assert!(get_enum("kv").unwrap() == Iso639_1::Kv);
        assert!(get_enum("kw").unwrap() == Iso639_1::Kw);
        assert!(get_enum("ky").unwrap() == Iso639_1::Ky);
        assert!(get_enum("la").unwrap() == Iso639_1::La);
        assert!(get_enum("lb").unwrap() == Iso639_1::Lb);
        assert!(get_enum("lg").unwrap() == Iso639_1::Lg);
        assert!(get_enum("li").unwrap() == Iso639_1::Li);
        assert!(get_enum("ln").unwrap() == Iso639_1::Ln);
        assert!(get_enum("lo").unwrap() == Iso639_1::Lo);
        assert!(get_enum("lt").unwrap() == Iso639_1::Lt);
        assert!(get_enum("lu").unwrap() == Iso639_1::Lu);
        assert!(get_enum("lv").unwrap() == Iso639_1::Lv);
        assert!(get_enum("mg").unwrap() == Iso639_1::Mg);
        assert!(get_enum("mh").unwrap() == Iso639_1::Mh);
        assert!(get_enum("mi").unwrap() == Iso639_1::Mi);
        assert!(get_enum("mk").unwrap() == Iso639_1::Mk);
        assert!(get_enum("ml").unwrap() == Iso639_1::Ml);
        assert!(get_enum("mn").unwrap() == Iso639_1::Mn);
        assert!(get_enum("mr").unwrap() == Iso639_1::Mr);
        assert!(get_enum("ms").unwrap() == Iso639_1::Ms);
        assert!(get_enum("mt").unwrap() == Iso639_1::Mt);
        assert!(get_enum("my").unwrap() == Iso639_1::My);
        assert!(get_enum("na").unwrap() == Iso639_1::Na);
        assert!(get_enum("nb").unwrap() == Iso639_1::Nb);
        assert!(get_enum("nd").unwrap() == Iso639_1::Nd);
        assert!(get_enum("ne").unwrap() == Iso639_1::Ne);
        assert!(get_enum("ng").unwrap() == Iso639_1::Ng);
        assert!(get_enum("nl").unwrap() == Iso639_1::Nl);
        assert!(get_enum("nn").unwrap() == Iso639_1::Nn);
        assert!(get_enum("no").unwrap() == Iso639_1::No);
        assert!(get_enum("nr").unwrap() == Iso639_1::Nr);
        assert!(get_enum("nv").unwrap() == Iso639_1::Nv);
        assert!(get_enum("ny").unwrap() == Iso639_1::Ny);
        assert!(get_enum("oc").unwrap() == Iso639_1::Oc);
        assert!(get_enum("oj").unwrap() == Iso639_1::Oj);
        assert!(get_enum("om").unwrap() == Iso639_1::Om);
        assert!(get_enum("or").unwrap() == Iso639_1::Or);
        assert!(get_enum("os").unwrap() == Iso639_1::Os);
        assert!(get_enum("pa").unwrap() == Iso639_1::Pa);
        assert!(get_enum("pi").unwrap() == Iso639_1::Pi);
        assert!(get_enum("pl").unwrap() == Iso639_1::Pl);
        assert!(get_enum("ps").unwrap() == Iso639_1::Ps);
        assert!(get_enum("pt").unwrap() == Iso639_1::Pt);
        assert!(get_enum("qu").unwrap() == Iso639_1::Qu);
        assert!(get_enum("rm").unwrap() == Iso639_1::Rm);
        assert!(get_enum("rn").unwrap() == Iso639_1::Rn);
        assert!(get_enum("ro").unwrap() == Iso639_1::Ro);
        assert!(get_enum("ru").unwrap() == Iso639_1::Ru);
        assert!(get_enum("rw").unwrap() == Iso639_1::Rw);
        assert!(get_enum("sa").unwrap() == Iso639_1::Sa);
        assert!(get_enum("sc").unwrap() == Iso639_1::Sc);
        assert!(get_enum("sd").unwrap() == Iso639_1::Sd);
        assert!(get_enum("se").unwrap() == Iso639_1::Se);
        assert!(get_enum("sg").unwrap() == Iso639_1::Sg);
        assert!(get_enum("si").unwrap() == Iso639_1::Si);
        assert!(get_enum("sk").unwrap() == Iso639_1::Sk);
        assert!(get_enum("sl").unwrap() == Iso639_1::Sl);
        assert!(get_enum("sm").unwrap() == Iso639_1::Sm);
        assert!(get_enum("sn").unwrap() == Iso639_1::Sn);
        assert!(get_enum("so").unwrap() == Iso639_1::So);
        assert!(get_enum("sq").unwrap() == Iso639_1::Sq);
        assert!(get_enum("sr").unwrap() == Iso639_1::Sr);
        assert!(get_enum("ss").unwrap() == Iso639_1::Ss);
        assert!(get_enum("st").unwrap() == Iso639_1::St);
        assert!(get_enum("su").unwrap() == Iso639_1::Su);
        assert!(get_enum("sv").unwrap() == Iso639_1::Sv);
        assert!(get_enum("sw").unwrap() == Iso639_1::Sw);
        assert!(get_enum("ta").unwrap() == Iso639_1::Ta);
        assert!(get_enum("te").unwrap() == Iso639_1::Te);
        assert!(get_enum("tg").unwrap() == Iso639_1::Tg);
        assert!(get_enum("th").unwrap() == Iso639_1::Th);
        assert!(get_enum("ti").unwrap() == Iso639_1::Ti);
        assert!(get_enum("tk").unwrap() == Iso639_1::Tk);
        assert!(get_enum("tl").unwrap() == Iso639_1::Tl);
        assert!(get_enum("tn").unwrap() == Iso639_1::Tn);
        assert!(get_enum("to").unwrap() == Iso639_1::To);
        assert!(get_enum("tr").unwrap() == Iso639_1::Tr);
        assert!(get_enum("ts").unwrap() == Iso639_1::Ts);
        assert!(get_enum("tt").unwrap() == Iso639_1::Tt);
        assert!(get_enum("tw").unwrap() == Iso639_1::Tw);
        assert!(get_enum("ty").unwrap() == Iso639_1::Ty);
        assert!(get_enum("ug").unwrap() == Iso639_1::Ug);
        assert!(get_enum("uk").unwrap() == Iso639_1::Uk);
        assert!(get_enum("ur").unwrap() == Iso639_1::Ur);
        assert!(get_enum("uz").unwrap() == Iso639_1::Uz);
        assert!(get_enum("ve").unwrap() == Iso639_1::Ve);
        assert!(get_enum("vi").unwrap() == Iso639_1::Vi);
        assert!(get_enum("vo").unwrap() == Iso639_1::Vo);
        assert!(get_enum("wa").unwrap() == Iso639_1::Wa);
        assert!(get_enum("wo").unwrap() == Iso639_1::Wo);
        assert!(get_enum("xh").unwrap() == Iso639_1::Xh);
        assert!(get_enum("yi").unwrap() == Iso639_1::Yi);
        assert!(get_enum("yo").unwrap() == Iso639_1::Yo);
        assert!(get_enum("za").unwrap() == Iso639_1::Za);
        assert!(get_enum("zh").unwrap() == Iso639_1::Zh);
        assert!(get_enum("zu").unwrap() == Iso639_1::Zu);
}
