extern crate iso639_1;
use iso639_1::{from_iso639_1, Iso639_1, Iso639v1ErrorKind};

#[test]
fn to_enum_0001_notexist() {
    let result = from_iso639_1("XXXX");
    assert!(result.is_err() == true);
    let error = result.err().unwrap();
    let message = error.inner.to_string();
    assert_eq!(message, "not found XXXX".to_string());
    let kind = error.kind();
    assert_eq!(kind, &Iso639v1ErrorKind::NotFoundFrom("XXXX".to_string()));
}

#[test]
fn to_enum_0002_2chars() {
    assert!(from_iso639_1("aa").unwrap() == Iso639_1::Aa);
    assert!(from_iso639_1("ab").unwrap() == Iso639_1::Ab);
    assert!(from_iso639_1("ae").unwrap() == Iso639_1::Ae);
    assert!(from_iso639_1("af").unwrap() == Iso639_1::Af);
    assert!(from_iso639_1("ak").unwrap() == Iso639_1::Ak);
    assert!(from_iso639_1("am").unwrap() == Iso639_1::Am);
    assert!(from_iso639_1("an").unwrap() == Iso639_1::An);
    assert!(from_iso639_1("ar").unwrap() == Iso639_1::Ar);
    assert!(from_iso639_1("as").unwrap() == Iso639_1::As);
    assert!(from_iso639_1("av").unwrap() == Iso639_1::Av);
    assert!(from_iso639_1("ay").unwrap() == Iso639_1::Ay);
    assert!(from_iso639_1("az").unwrap() == Iso639_1::Az);
    assert!(from_iso639_1("ba").unwrap() == Iso639_1::Ba);
    assert!(from_iso639_1("be").unwrap() == Iso639_1::Be);
    assert!(from_iso639_1("bg").unwrap() == Iso639_1::Bg);
    assert!(from_iso639_1("bh").unwrap() == Iso639_1::Bh);
    assert!(from_iso639_1("bi").unwrap() == Iso639_1::Bi);
    assert!(from_iso639_1("bm").unwrap() == Iso639_1::Bm);
    assert!(from_iso639_1("bn").unwrap() == Iso639_1::Bn);
    assert!(from_iso639_1("bo").unwrap() == Iso639_1::Bo);
    assert!(from_iso639_1("br").unwrap() == Iso639_1::Br);
    assert!(from_iso639_1("bs").unwrap() == Iso639_1::Bs);
    assert!(from_iso639_1("ca").unwrap() == Iso639_1::Ca);
    assert!(from_iso639_1("ce").unwrap() == Iso639_1::Ce);
    assert!(from_iso639_1("ch").unwrap() == Iso639_1::Ch);
    assert!(from_iso639_1("co").unwrap() == Iso639_1::Co);
    assert!(from_iso639_1("cr").unwrap() == Iso639_1::Cr);
    assert!(from_iso639_1("cs").unwrap() == Iso639_1::Cs);
    assert!(from_iso639_1("cu").unwrap() == Iso639_1::Cu);
    assert!(from_iso639_1("cv").unwrap() == Iso639_1::Cv);
    assert!(from_iso639_1("cy").unwrap() == Iso639_1::Cy);
    assert!(from_iso639_1("da").unwrap() == Iso639_1::Da);
    assert!(from_iso639_1("de").unwrap() == Iso639_1::De);
    assert!(from_iso639_1("dv").unwrap() == Iso639_1::Dv);
    assert!(from_iso639_1("dz").unwrap() == Iso639_1::Dz);
    assert!(from_iso639_1("ee").unwrap() == Iso639_1::Ee);
    assert!(from_iso639_1("el").unwrap() == Iso639_1::El);
    assert!(from_iso639_1("en").unwrap() == Iso639_1::En);
    assert!(from_iso639_1("eo").unwrap() == Iso639_1::Eo);
    assert!(from_iso639_1("es").unwrap() == Iso639_1::Es);
    assert!(from_iso639_1("et").unwrap() == Iso639_1::Et);
    assert!(from_iso639_1("eu").unwrap() == Iso639_1::Eu);
    assert!(from_iso639_1("fa").unwrap() == Iso639_1::Fa);
    assert!(from_iso639_1("ff").unwrap() == Iso639_1::Ff);
    assert!(from_iso639_1("fi").unwrap() == Iso639_1::Fi);
    assert!(from_iso639_1("fj").unwrap() == Iso639_1::Fj);
    assert!(from_iso639_1("fo").unwrap() == Iso639_1::Fo);
    assert!(from_iso639_1("fr").unwrap() == Iso639_1::Fr);
    assert!(from_iso639_1("fy").unwrap() == Iso639_1::Fy);
    assert!(from_iso639_1("ga").unwrap() == Iso639_1::Ga);
    assert!(from_iso639_1("gd").unwrap() == Iso639_1::Gd);
    assert!(from_iso639_1("gl").unwrap() == Iso639_1::Gl);
    assert!(from_iso639_1("gn").unwrap() == Iso639_1::Gn);
    assert!(from_iso639_1("gu").unwrap() == Iso639_1::Gu);
    assert!(from_iso639_1("gv").unwrap() == Iso639_1::Gv);
    assert!(from_iso639_1("ha").unwrap() == Iso639_1::Ha);
    assert!(from_iso639_1("he").unwrap() == Iso639_1::He);
    assert!(from_iso639_1("hi").unwrap() == Iso639_1::Hi);
    assert!(from_iso639_1("ho").unwrap() == Iso639_1::Ho);
    assert!(from_iso639_1("hr").unwrap() == Iso639_1::Hr);
    assert!(from_iso639_1("ht").unwrap() == Iso639_1::Ht);
    assert!(from_iso639_1("hu").unwrap() == Iso639_1::Hu);
    assert!(from_iso639_1("hy").unwrap() == Iso639_1::Hy);
    assert!(from_iso639_1("hz").unwrap() == Iso639_1::Hz);
    assert!(from_iso639_1("ia").unwrap() == Iso639_1::Ia);
    assert!(from_iso639_1("id").unwrap() == Iso639_1::Id);
    assert!(from_iso639_1("ie").unwrap() == Iso639_1::Ie);
    assert!(from_iso639_1("ig").unwrap() == Iso639_1::Ig);
    assert!(from_iso639_1("ii").unwrap() == Iso639_1::Ii);
    assert!(from_iso639_1("ik").unwrap() == Iso639_1::Ik);
    assert!(from_iso639_1("io").unwrap() == Iso639_1::Io);
    assert!(from_iso639_1("is").unwrap() == Iso639_1::Is);
    assert!(from_iso639_1("it").unwrap() == Iso639_1::It);
    assert!(from_iso639_1("iu").unwrap() == Iso639_1::Iu);
    assert!(from_iso639_1("ja").unwrap() == Iso639_1::Ja);
    assert!(from_iso639_1("jv").unwrap() == Iso639_1::Jv);
    assert!(from_iso639_1("ka").unwrap() == Iso639_1::Ka);
    assert!(from_iso639_1("kg").unwrap() == Iso639_1::Kg);
    assert!(from_iso639_1("ki").unwrap() == Iso639_1::Ki);
    assert!(from_iso639_1("kj").unwrap() == Iso639_1::Kj);
    assert!(from_iso639_1("kk").unwrap() == Iso639_1::Kk);
    assert!(from_iso639_1("kl").unwrap() == Iso639_1::Kl);
    assert!(from_iso639_1("km").unwrap() == Iso639_1::Km);
    assert!(from_iso639_1("kn").unwrap() == Iso639_1::Kn);
    assert!(from_iso639_1("ko").unwrap() == Iso639_1::Ko);
    assert!(from_iso639_1("kr").unwrap() == Iso639_1::Kr);
    assert!(from_iso639_1("ks").unwrap() == Iso639_1::Ks);
    assert!(from_iso639_1("ku").unwrap() == Iso639_1::Ku);
    assert!(from_iso639_1("kv").unwrap() == Iso639_1::Kv);
    assert!(from_iso639_1("kw").unwrap() == Iso639_1::Kw);
    assert!(from_iso639_1("ky").unwrap() == Iso639_1::Ky);
    assert!(from_iso639_1("la").unwrap() == Iso639_1::La);
    assert!(from_iso639_1("lb").unwrap() == Iso639_1::Lb);
    assert!(from_iso639_1("lg").unwrap() == Iso639_1::Lg);
    assert!(from_iso639_1("li").unwrap() == Iso639_1::Li);
    assert!(from_iso639_1("ln").unwrap() == Iso639_1::Ln);
    assert!(from_iso639_1("lo").unwrap() == Iso639_1::Lo);
    assert!(from_iso639_1("lt").unwrap() == Iso639_1::Lt);
    assert!(from_iso639_1("lu").unwrap() == Iso639_1::Lu);
    assert!(from_iso639_1("lv").unwrap() == Iso639_1::Lv);
    assert!(from_iso639_1("mg").unwrap() == Iso639_1::Mg);
    assert!(from_iso639_1("mh").unwrap() == Iso639_1::Mh);
    assert!(from_iso639_1("mi").unwrap() == Iso639_1::Mi);
    assert!(from_iso639_1("mk").unwrap() == Iso639_1::Mk);
    assert!(from_iso639_1("ml").unwrap() == Iso639_1::Ml);
    assert!(from_iso639_1("mn").unwrap() == Iso639_1::Mn);
    assert!(from_iso639_1("mr").unwrap() == Iso639_1::Mr);
    assert!(from_iso639_1("ms").unwrap() == Iso639_1::Ms);
    assert!(from_iso639_1("mt").unwrap() == Iso639_1::Mt);
    assert!(from_iso639_1("my").unwrap() == Iso639_1::My);
    assert!(from_iso639_1("na").unwrap() == Iso639_1::Na);
    assert!(from_iso639_1("nb").unwrap() == Iso639_1::Nb);
    assert!(from_iso639_1("nd").unwrap() == Iso639_1::Nd);
    assert!(from_iso639_1("ne").unwrap() == Iso639_1::Ne);
    assert!(from_iso639_1("ng").unwrap() == Iso639_1::Ng);
    assert!(from_iso639_1("nl").unwrap() == Iso639_1::Nl);
    assert!(from_iso639_1("nn").unwrap() == Iso639_1::Nn);
    assert!(from_iso639_1("no").unwrap() == Iso639_1::No);
    assert!(from_iso639_1("nr").unwrap() == Iso639_1::Nr);
    assert!(from_iso639_1("nv").unwrap() == Iso639_1::Nv);
    assert!(from_iso639_1("ny").unwrap() == Iso639_1::Ny);
    assert!(from_iso639_1("oc").unwrap() == Iso639_1::Oc);
    assert!(from_iso639_1("oj").unwrap() == Iso639_1::Oj);
    assert!(from_iso639_1("om").unwrap() == Iso639_1::Om);
    assert!(from_iso639_1("or").unwrap() == Iso639_1::Or);
    assert!(from_iso639_1("os").unwrap() == Iso639_1::Os);
    assert!(from_iso639_1("pa").unwrap() == Iso639_1::Pa);
    assert!(from_iso639_1("pi").unwrap() == Iso639_1::Pi);
    assert!(from_iso639_1("pl").unwrap() == Iso639_1::Pl);
    assert!(from_iso639_1("ps").unwrap() == Iso639_1::Ps);
    assert!(from_iso639_1("pt").unwrap() == Iso639_1::Pt);
    assert!(from_iso639_1("qu").unwrap() == Iso639_1::Qu);
    assert!(from_iso639_1("rm").unwrap() == Iso639_1::Rm);
    assert!(from_iso639_1("rn").unwrap() == Iso639_1::Rn);
    assert!(from_iso639_1("ro").unwrap() == Iso639_1::Ro);
    assert!(from_iso639_1("ru").unwrap() == Iso639_1::Ru);
    assert!(from_iso639_1("rw").unwrap() == Iso639_1::Rw);
    assert!(from_iso639_1("sa").unwrap() == Iso639_1::Sa);
    assert!(from_iso639_1("sc").unwrap() == Iso639_1::Sc);
    assert!(from_iso639_1("sd").unwrap() == Iso639_1::Sd);
    assert!(from_iso639_1("se").unwrap() == Iso639_1::Se);
    assert!(from_iso639_1("sg").unwrap() == Iso639_1::Sg);
    assert!(from_iso639_1("si").unwrap() == Iso639_1::Si);
    assert!(from_iso639_1("sk").unwrap() == Iso639_1::Sk);
    assert!(from_iso639_1("sl").unwrap() == Iso639_1::Sl);
    assert!(from_iso639_1("sm").unwrap() == Iso639_1::Sm);
    assert!(from_iso639_1("sn").unwrap() == Iso639_1::Sn);
    assert!(from_iso639_1("so").unwrap() == Iso639_1::So);
    assert!(from_iso639_1("sq").unwrap() == Iso639_1::Sq);
    assert!(from_iso639_1("sr").unwrap() == Iso639_1::Sr);
    assert!(from_iso639_1("ss").unwrap() == Iso639_1::Ss);
    assert!(from_iso639_1("st").unwrap() == Iso639_1::St);
    assert!(from_iso639_1("su").unwrap() == Iso639_1::Su);
    assert!(from_iso639_1("sv").unwrap() == Iso639_1::Sv);
    assert!(from_iso639_1("sw").unwrap() == Iso639_1::Sw);
    assert!(from_iso639_1("ta").unwrap() == Iso639_1::Ta);
    assert!(from_iso639_1("te").unwrap() == Iso639_1::Te);
    assert!(from_iso639_1("tg").unwrap() == Iso639_1::Tg);
    assert!(from_iso639_1("th").unwrap() == Iso639_1::Th);
    assert!(from_iso639_1("ti").unwrap() == Iso639_1::Ti);
    assert!(from_iso639_1("tk").unwrap() == Iso639_1::Tk);
    assert!(from_iso639_1("tl").unwrap() == Iso639_1::Tl);
    assert!(from_iso639_1("tn").unwrap() == Iso639_1::Tn);
    assert!(from_iso639_1("to").unwrap() == Iso639_1::To);
    assert!(from_iso639_1("tr").unwrap() == Iso639_1::Tr);
    assert!(from_iso639_1("ts").unwrap() == Iso639_1::Ts);
    assert!(from_iso639_1("tt").unwrap() == Iso639_1::Tt);
    assert!(from_iso639_1("tw").unwrap() == Iso639_1::Tw);
    assert!(from_iso639_1("ty").unwrap() == Iso639_1::Ty);
    assert!(from_iso639_1("ug").unwrap() == Iso639_1::Ug);
    assert!(from_iso639_1("uk").unwrap() == Iso639_1::Uk);
    assert!(from_iso639_1("ur").unwrap() == Iso639_1::Ur);
    assert!(from_iso639_1("uz").unwrap() == Iso639_1::Uz);
    assert!(from_iso639_1("ve").unwrap() == Iso639_1::Ve);
    assert!(from_iso639_1("vi").unwrap() == Iso639_1::Vi);
    assert!(from_iso639_1("vo").unwrap() == Iso639_1::Vo);
    assert!(from_iso639_1("wa").unwrap() == Iso639_1::Wa);
    assert!(from_iso639_1("wo").unwrap() == Iso639_1::Wo);
    assert!(from_iso639_1("xh").unwrap() == Iso639_1::Xh);
    assert!(from_iso639_1("yi").unwrap() == Iso639_1::Yi);
    assert!(from_iso639_1("yo").unwrap() == Iso639_1::Yo);
    assert!(from_iso639_1("za").unwrap() == Iso639_1::Za);
    assert!(from_iso639_1("zh").unwrap() == Iso639_1::Zh);
    assert!(from_iso639_1("zu").unwrap() == Iso639_1::Zu);
}
