extern crate iso639_1;
use iso639_1::{get_code_iso639_3, Iso639v1ErrorKind};

#[test]
fn get_iso639v3_0001_not_match() {
    let result = get_code_iso639_3("frite");
    assert!(result.is_err() == true);
    let error = result.err().unwrap();
    let message = error.inner.to_string();
    assert_eq!(message, "not found frite".to_string());
    let kind = error.kind();
    assert_eq!(kind, &Iso639v1ErrorKind::NotFoundIso639v1("frite".to_string()));

}

#[test]
fn get_iso639v3_0002_match() {
        assert!(get_code_iso639_3("aa").unwrap() == "aar");
        assert!(get_code_iso639_3("ab").unwrap() == "abk");
        assert!(get_code_iso639_3("ae").unwrap() == "ave");
        assert!(get_code_iso639_3("af").unwrap() == "afr");
        assert!(get_code_iso639_3("ak").unwrap() == "aka");
        assert!(get_code_iso639_3("am").unwrap() == "amh");
        assert!(get_code_iso639_3("an").unwrap() == "arg");
        assert!(get_code_iso639_3("ar").unwrap() == "ara");
        assert!(get_code_iso639_3("as").unwrap() == "asm");
        assert!(get_code_iso639_3("av").unwrap() == "ava");
        assert!(get_code_iso639_3("ay").unwrap() == "aym");
        assert!(get_code_iso639_3("az").unwrap() == "aze");
        assert!(get_code_iso639_3("ba").unwrap() == "bak");
        assert!(get_code_iso639_3("be").unwrap() == "bel");
        assert!(get_code_iso639_3("bg").unwrap() == "bul");
        assert!(get_code_iso639_3("bh").unwrap() == "bih");
        assert!(get_code_iso639_3("bi").unwrap() == "bis");
        assert!(get_code_iso639_3("bm").unwrap() == "bam");
        assert!(get_code_iso639_3("bn").unwrap() == "ben");
        assert!(get_code_iso639_3("bo").unwrap() == "bod");
        assert!(get_code_iso639_3("br").unwrap() == "bre");
        assert!(get_code_iso639_3("bs").unwrap() == "bos");
        assert!(get_code_iso639_3("ca").unwrap() == "cat");
        assert!(get_code_iso639_3("ce").unwrap() == "che");
        assert!(get_code_iso639_3("ch").unwrap() == "cha");
        assert!(get_code_iso639_3("co").unwrap() == "cos");
        assert!(get_code_iso639_3("cr").unwrap() == "cre");
        assert!(get_code_iso639_3("cs").unwrap() == "ces");
        assert!(get_code_iso639_3("cu").unwrap() == "chu");
        assert!(get_code_iso639_3("cv").unwrap() == "chv");
        assert!(get_code_iso639_3("cy").unwrap() == "cym");
        assert!(get_code_iso639_3("da").unwrap() == "dan");
        assert!(get_code_iso639_3("de").unwrap() == "deu");
        assert!(get_code_iso639_3("dv").unwrap() == "div");
        assert!(get_code_iso639_3("dz").unwrap() == "dzo");
        assert!(get_code_iso639_3("ee").unwrap() == "ewe");
        assert!(get_code_iso639_3("el").unwrap() == "ell");
        assert!(get_code_iso639_3("en").unwrap() == "eng");
        assert!(get_code_iso639_3("eo").unwrap() == "epo");
        assert!(get_code_iso639_3("es").unwrap() == "spa");
        assert!(get_code_iso639_3("et").unwrap() == "est");
        assert!(get_code_iso639_3("eu").unwrap() == "eus");
        assert!(get_code_iso639_3("fa").unwrap() == "fas");
        assert!(get_code_iso639_3("ff").unwrap() == "ful");
        assert!(get_code_iso639_3("fi").unwrap() == "fin");
        assert!(get_code_iso639_3("fj").unwrap() == "fij");
        assert!(get_code_iso639_3("fo").unwrap() == "fao");
        assert!(get_code_iso639_3("fr").unwrap() == "fra");
        assert!(get_code_iso639_3("fy").unwrap() == "fry");
        assert!(get_code_iso639_3("ga").unwrap() == "gle");
        assert!(get_code_iso639_3("gd").unwrap() == "gla");
        assert!(get_code_iso639_3("gl").unwrap() == "glg");
        assert!(get_code_iso639_3("gn").unwrap() == "grn");
        assert!(get_code_iso639_3("gu").unwrap() == "guj");
        assert!(get_code_iso639_3("gv").unwrap() == "glv");
        assert!(get_code_iso639_3("ha").unwrap() == "hau");
        assert!(get_code_iso639_3("he").unwrap() == "heb");
        assert!(get_code_iso639_3("hi").unwrap() == "hin");
        assert!(get_code_iso639_3("ho").unwrap() == "hmo");
        assert!(get_code_iso639_3("hr").unwrap() == "hrv");
        assert!(get_code_iso639_3("ht").unwrap() == "hat");
        assert!(get_code_iso639_3("hu").unwrap() == "hun");
        assert!(get_code_iso639_3("hy").unwrap() == "hye");
        assert!(get_code_iso639_3("hz").unwrap() == "her");
        assert!(get_code_iso639_3("ia").unwrap() == "ina");
        assert!(get_code_iso639_3("id").unwrap() == "ind");
        assert!(get_code_iso639_3("ie").unwrap() == "ile");
        assert!(get_code_iso639_3("ig").unwrap() == "ibo");
        assert!(get_code_iso639_3("ii").unwrap() == "iii");
        assert!(get_code_iso639_3("ik").unwrap() == "ipk");
        assert!(get_code_iso639_3("io").unwrap() == "ido");
        assert!(get_code_iso639_3("is").unwrap() == "isl");
        assert!(get_code_iso639_3("it").unwrap() == "ita");
        assert!(get_code_iso639_3("iu").unwrap() == "iku");
        assert!(get_code_iso639_3("ja").unwrap() == "jpn");
        assert!(get_code_iso639_3("jv").unwrap() == "jav");
        assert!(get_code_iso639_3("ka").unwrap() == "kat");
        assert!(get_code_iso639_3("kg").unwrap() == "kon");
        assert!(get_code_iso639_3("ki").unwrap() == "kik");
        assert!(get_code_iso639_3("kj").unwrap() == "kua");
        assert!(get_code_iso639_3("kk").unwrap() == "kaz");
        assert!(get_code_iso639_3("kl").unwrap() == "kal");
        assert!(get_code_iso639_3("km").unwrap() == "khm");
        assert!(get_code_iso639_3("kn").unwrap() == "kan");
        assert!(get_code_iso639_3("ko").unwrap() == "kor");
        assert!(get_code_iso639_3("kr").unwrap() == "kau");
        assert!(get_code_iso639_3("ks").unwrap() == "kas");
        assert!(get_code_iso639_3("ku").unwrap() == "kur");
        assert!(get_code_iso639_3("kv").unwrap() == "kom");
        assert!(get_code_iso639_3("kw").unwrap() == "cor");
        assert!(get_code_iso639_3("ky").unwrap() == "kir");
        assert!(get_code_iso639_3("la").unwrap() == "lat");
        assert!(get_code_iso639_3("lb").unwrap() == "ltz");
        assert!(get_code_iso639_3("lg").unwrap() == "lug");
        assert!(get_code_iso639_3("li").unwrap() == "lim");
        assert!(get_code_iso639_3("ln").unwrap() == "lin");
        assert!(get_code_iso639_3("lo").unwrap() == "lao");
        assert!(get_code_iso639_3("lt").unwrap() == "lit");
        assert!(get_code_iso639_3("lu").unwrap() == "lub");
        assert!(get_code_iso639_3("lv").unwrap() == "lav");
        assert!(get_code_iso639_3("mg").unwrap() == "mlg");
        assert!(get_code_iso639_3("mh").unwrap() == "mah");
        assert!(get_code_iso639_3("mi").unwrap() == "mri");
        assert!(get_code_iso639_3("mk").unwrap() == "mkd");
        assert!(get_code_iso639_3("ml").unwrap() == "mal");
        assert!(get_code_iso639_3("mn").unwrap() == "mon");
        assert!(get_code_iso639_3("mr").unwrap() == "mar");
        assert!(get_code_iso639_3("ms").unwrap() == "msa");
        assert!(get_code_iso639_3("mt").unwrap() == "mlt");
        assert!(get_code_iso639_3("my").unwrap() == "mya");
        assert!(get_code_iso639_3("na").unwrap() == "nau");
        assert!(get_code_iso639_3("nb").unwrap() == "nob");
        assert!(get_code_iso639_3("nd").unwrap() == "nde");
        assert!(get_code_iso639_3("ne").unwrap() == "nep");
        assert!(get_code_iso639_3("ng").unwrap() == "ndo");
        assert!(get_code_iso639_3("nl").unwrap() == "nld");
        assert!(get_code_iso639_3("nn").unwrap() == "nno");
        assert!(get_code_iso639_3("no").unwrap() == "nor");
        assert!(get_code_iso639_3("nr").unwrap() == "nbl");
        assert!(get_code_iso639_3("nv").unwrap() == "nav");
        assert!(get_code_iso639_3("ny").unwrap() == "nya");
        assert!(get_code_iso639_3("oc").unwrap() == "oci");
        assert!(get_code_iso639_3("oj").unwrap() == "oji");
        assert!(get_code_iso639_3("om").unwrap() == "orm");
        assert!(get_code_iso639_3("or").unwrap() == "ori");
        assert!(get_code_iso639_3("os").unwrap() == "oss");
        assert!(get_code_iso639_3("pa").unwrap() == "pan");
        assert!(get_code_iso639_3("pi").unwrap() == "pli");
        assert!(get_code_iso639_3("pl").unwrap() == "pol");
        assert!(get_code_iso639_3("ps").unwrap() == "pus");
        assert!(get_code_iso639_3("pt").unwrap() == "por");
        assert!(get_code_iso639_3("qu").unwrap() == "que");
        assert!(get_code_iso639_3("rm").unwrap() == "roh");
        assert!(get_code_iso639_3("rn").unwrap() == "run");
        assert!(get_code_iso639_3("ro").unwrap() == "ron");
        assert!(get_code_iso639_3("ru").unwrap() == "rus");
        assert!(get_code_iso639_3("rw").unwrap() == "kin");
        assert!(get_code_iso639_3("sa").unwrap() == "san");
        assert!(get_code_iso639_3("sc").unwrap() == "srd");
        assert!(get_code_iso639_3("sd").unwrap() == "snd");
        assert!(get_code_iso639_3("se").unwrap() == "sme");
        assert!(get_code_iso639_3("sg").unwrap() == "sag");
        assert!(get_code_iso639_3("si").unwrap() == "sin");
        assert!(get_code_iso639_3("sk").unwrap() == "slk");
        assert!(get_code_iso639_3("sl").unwrap() == "slv");
        assert!(get_code_iso639_3("sm").unwrap() == "smo");
        assert!(get_code_iso639_3("sn").unwrap() == "sna");
        assert!(get_code_iso639_3("so").unwrap() == "som");
        assert!(get_code_iso639_3("sq").unwrap() == "sqi");
        assert!(get_code_iso639_3("sr").unwrap() == "srp");
        assert!(get_code_iso639_3("ss").unwrap() == "ssw");
        assert!(get_code_iso639_3("st").unwrap() == "sot");
        assert!(get_code_iso639_3("su").unwrap() == "sun");
        assert!(get_code_iso639_3("sv").unwrap() == "swe");
        assert!(get_code_iso639_3("sw").unwrap() == "swa");
        assert!(get_code_iso639_3("ta").unwrap() == "tam");
        assert!(get_code_iso639_3("te").unwrap() == "tel");
        assert!(get_code_iso639_3("tg").unwrap() == "tgk");
        assert!(get_code_iso639_3("th").unwrap() == "tha");
        assert!(get_code_iso639_3("ti").unwrap() == "tir");
        assert!(get_code_iso639_3("tk").unwrap() == "tuk");
        assert!(get_code_iso639_3("tl").unwrap() == "tgl");
        assert!(get_code_iso639_3("tn").unwrap() == "tsn");
        assert!(get_code_iso639_3("to").unwrap() == "ton");
        assert!(get_code_iso639_3("tr").unwrap() == "tur");
        assert!(get_code_iso639_3("ts").unwrap() == "tso");
        assert!(get_code_iso639_3("tt").unwrap() == "tat");
        assert!(get_code_iso639_3("tw").unwrap() == "twi");
        assert!(get_code_iso639_3("ty").unwrap() == "tah");
        assert!(get_code_iso639_3("ug").unwrap() == "uig");
        assert!(get_code_iso639_3("uk").unwrap() == "ukr");
        assert!(get_code_iso639_3("ur").unwrap() == "urd");
        assert!(get_code_iso639_3("uz").unwrap() == "uzb");
        assert!(get_code_iso639_3("ve").unwrap() == "ven");
        assert!(get_code_iso639_3("vi").unwrap() == "vie");
        assert!(get_code_iso639_3("vo").unwrap() == "vol");
        assert!(get_code_iso639_3("wa").unwrap() == "wln");
        assert!(get_code_iso639_3("wo").unwrap() == "wol");
        assert!(get_code_iso639_3("xh").unwrap() == "xho");
        assert!(get_code_iso639_3("yi").unwrap() == "yid");
        assert!(get_code_iso639_3("yo").unwrap() == "yor");
        assert!(get_code_iso639_3("za").unwrap() == "zha");
        assert!(get_code_iso639_3("zh").unwrap() == "zho");
        assert!(get_code_iso639_3("zu").unwrap() == "zul");
}
